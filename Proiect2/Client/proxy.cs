//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModelMyPhotos
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Photos", Namespace = "http://schemas.datacontract.org/2004/07/ModelMyPhotos")]
    public partial class Photos : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private System.Nullable<System.DateTime> DateField;

        private string EventField;

        private string LandscapeField;

        private string PathField;

        private ModelMyPhotos.Persons[] Persons_PhotoField;

        private int Photo_IdField;

        private ModelMyPhotos.Places Places_PhotoField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Landscape
        {
            get
            {
                return this.LandscapeField;
            }
            set
            {
                this.LandscapeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelMyPhotos.Persons[] Persons_Photo
        {
            get
            {
                return this.Persons_PhotoField;
            }
            set
            {
                this.Persons_PhotoField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Photo_Id
        {
            get
            {
                return this.Photo_IdField;
            }
            set
            {
                this.Photo_IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelMyPhotos.Places Places_Photo
        {
            get
            {
                return this.Places_PhotoField;
            }
            set
            {
                this.Places_PhotoField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Places", Namespace = "http://schemas.datacontract.org/2004/07/ModelMyPhotos")]
    public partial class Places : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string CityField;

        private string CountryField;

        private ModelMyPhotos.Films[] FilmsField;

        private ModelMyPhotos.Photos[] PhotosField;

        private int Place_IdField;

        private string RegionField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City
        {
            get
            {
                return this.CityField;
            }
            set
            {
                this.CityField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country
        {
            get
            {
                return this.CountryField;
            }
            set
            {
                this.CountryField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelMyPhotos.Films[] Films
        {
            get
            {
                return this.FilmsField;
            }
            set
            {
                this.FilmsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelMyPhotos.Photos[] Photos
        {
            get
            {
                return this.PhotosField;
            }
            set
            {
                this.PhotosField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Place_Id
        {
            get
            {
                return this.Place_IdField;
            }
            set
            {
                this.Place_IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region
        {
            get
            {
                return this.RegionField;
            }
            set
            {
                this.RegionField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Persons", Namespace = "http://schemas.datacontract.org/2004/07/ModelMyPhotos")]
    public partial class Persons : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string DescriptionField;

        private ModelMyPhotos.Films[] FilmsField;

        private string NameField;

        private int Person_IdField;

        private ModelMyPhotos.Photos[] PhotosField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelMyPhotos.Films[] Films
        {
            get
            {
                return this.FilmsField;
            }
            set
            {
                this.FilmsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Person_Id
        {
            get
            {
                return this.Person_IdField;
            }
            set
            {
                this.Person_IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelMyPhotos.Photos[] Photos
        {
            get
            {
                return this.PhotosField;
            }
            set
            {
                this.PhotosField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Films", Namespace = "http://schemas.datacontract.org/2004/07/ModelMyPhotos")]
    public partial class Films : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private System.Nullable<System.DateTime> DateField;

        private string EventField;

        private int Film_IdField;

        private string LandscapeField;

        private string PathField;

        private ModelMyPhotos.Persons[] PersonsField;

        private ModelMyPhotos.Places[] Places_PhotoField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Event
        {
            get
            {
                return this.EventField;
            }
            set
            {
                this.EventField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Film_Id
        {
            get
            {
                return this.Film_IdField;
            }
            set
            {
                this.Film_IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Landscape
        {
            get
            {
                return this.LandscapeField;
            }
            set
            {
                this.LandscapeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelMyPhotos.Persons[] Persons
        {
            get
            {
                return this.PersonsField;
            }
            set
            {
                this.PersonsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public ModelMyPhotos.Places[] Places_Photo
        {
            get
            {
                return this.Places_PhotoField;
            }
            set
            {
                this.Places_PhotoField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IModelMyPhotos")]
public interface IModelMyPhotos
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/AddPhoto", ReplyAction = "http://tempuri.org/InterfacePhoto/AddPhotoResponse")]
    bool AddPhoto(ModelMyPhotos.Photos newPhoto);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/AddPhoto", ReplyAction = "http://tempuri.org/InterfacePhoto/AddPhotoResponse")]
    System.Threading.Tasks.Task<bool> AddPhotoAsync(ModelMyPhotos.Photos newPhoto);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/UpdatePhoto", ReplyAction = "http://tempuri.org/InterfacePhoto/UpdatePhotoResponse")]
    ModelMyPhotos.Photos UpdatePhoto(ModelMyPhotos.Photos newPhoto);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/UpdatePhoto", ReplyAction = "http://tempuri.org/InterfacePhoto/UpdatePhotoResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Photos> UpdatePhotoAsync(ModelMyPhotos.Photos newPhoto);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/DeletePhoto", ReplyAction = "http://tempuri.org/InterfacePhoto/DeletePhotoResponse")]
    int DeletePhoto(int id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/DeletePhoto", ReplyAction = "http://tempuri.org/InterfacePhoto/DeletePhotoResponse")]
    System.Threading.Tasks.Task<int> DeletePhotoAsync(int id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/GetPhotoByDate", ReplyAction = "http://tempuri.org/InterfacePhoto/GetPhotoByDateResponse")]
    ModelMyPhotos.Photos[] GetPhotoByDate(System.DateTime date);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/GetPhotoByDate", ReplyAction = "http://tempuri.org/InterfacePhoto/GetPhotoByDateResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotoByDateAsync(System.DateTime date);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/GetPhotoByEvent", ReplyAction = "http://tempuri.org/InterfacePhoto/GetPhotoByEventResponse")]
    ModelMyPhotos.Photos[] GetPhotoByEvent(string eveniment);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/GetPhotoByEvent", ReplyAction = "http://tempuri.org/InterfacePhoto/GetPhotoByEventResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotoByEventAsync(string eveniment);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/GetPhotoByLandscape", ReplyAction = "http://tempuri.org/InterfacePhoto/GetPhotoByLandscapeResponse")]
    ModelMyPhotos.Photos[] GetPhotoByLandscape(string landscape);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/GetPhotoByLandscape", ReplyAction = "http://tempuri.org/InterfacePhoto/GetPhotoByLandscapeResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotoByLandscapeAsync(string landscape);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/GetPhotoByPath", ReplyAction = "http://tempuri.org/InterfacePhoto/GetPhotoByPathResponse")]
    ModelMyPhotos.Photos GetPhotoByPath(string path);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePhoto/GetPhotoByPath", ReplyAction = "http://tempuri.org/InterfacePhoto/GetPhotoByPathResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Photos> GetPhotoByPathAsync(string path);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFilm/AddFilm", ReplyAction = "http://tempuri.org/InterfaceFilm/AddFilmResponse")]
    bool AddFilm(ModelMyPhotos.Films newFilm);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFilm/AddFilm", ReplyAction = "http://tempuri.org/InterfaceFilm/AddFilmResponse")]
    System.Threading.Tasks.Task<bool> AddFilmAsync(ModelMyPhotos.Films newFilm);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFilm/UpdateFilm", ReplyAction = "http://tempuri.org/InterfaceFilm/UpdateFilmResponse")]
    ModelMyPhotos.Films UpdateFilm(ModelMyPhotos.Films newFilm);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFilm/UpdateFilm", ReplyAction = "http://tempuri.org/InterfaceFilm/UpdateFilmResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Films> UpdateFilmAsync(ModelMyPhotos.Films newFilm);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFilm/DeleteFilm", ReplyAction = "http://tempuri.org/InterfaceFilm/DeleteFilmResponse")]
    int DeleteFilm(int id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFilm/DeleteFilm", ReplyAction = "http://tempuri.org/InterfaceFilm/DeleteFilmResponse")]
    System.Threading.Tasks.Task<int> DeleteFilmAsync(int id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFilm/GetFilmByDate", ReplyAction = "http://tempuri.org/InterfaceFilm/GetFilmByDateResponse")]
    ModelMyPhotos.Films[] GetFilmByDate(System.DateTime date);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFilm/GetFilmByDate", ReplyAction = "http://tempuri.org/InterfaceFilm/GetFilmByDateResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmByDateAsync(System.DateTime date);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFilm/GetFilmByEvent", ReplyAction = "http://tempuri.org/InterfaceFilm/GetFilmByEventResponse")]
    ModelMyPhotos.Films[] GetFilmByEvent(string eveniment);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFilm/GetFilmByEvent", ReplyAction = "http://tempuri.org/InterfaceFilm/GetFilmByEventResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmByEventAsync(string eveniment);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFilm/GetFilmByLandscape", ReplyAction = "http://tempuri.org/InterfaceFilm/GetFilmByLandscapeResponse")]
    ModelMyPhotos.Films[] GetFilmByLandscape(string landscape);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFilm/GetFilmByLandscape", ReplyAction = "http://tempuri.org/InterfaceFilm/GetFilmByLandscapeResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmByLandscapeAsync(string landscape);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePersons/GetPhotosByPersonName", ReplyAction = "http://tempuri.org/InterfacePersons/GetPhotosByPersonNameResponse")]
    ModelMyPhotos.Photos[] GetPhotosByPersonName(string personName);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePersons/GetPhotosByPersonName", ReplyAction = "http://tempuri.org/InterfacePersons/GetPhotosByPersonNameResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotosByPersonNameAsync(string personName);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePersons/GetPhotosByPersonDescription", ReplyAction = "http://tempuri.org/InterfacePersons/GetPhotosByPersonDescriptionResponse")]
    ModelMyPhotos.Photos[] GetPhotosByPersonDescription(string personDescription);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePersons/GetPhotosByPersonDescription", ReplyAction = "http://tempuri.org/InterfacePersons/GetPhotosByPersonDescriptionResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotosByPersonDescriptionAsync(string personDescription);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePersons/GetFilmsByPersonName", ReplyAction = "http://tempuri.org/InterfacePersons/GetFilmsByPersonNameResponse")]
    ModelMyPhotos.Films[] GetFilmsByPersonName(string personName);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePersons/GetFilmsByPersonName", ReplyAction = "http://tempuri.org/InterfacePersons/GetFilmsByPersonNameResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmsByPersonNameAsync(string personName);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePersons/GetFilmsByPersonDescription", ReplyAction = "http://tempuri.org/InterfacePersons/GetFilmsByPersonDescriptionResponse")]
    ModelMyPhotos.Films[] GetFilmsByPersonDescription(string personDescription);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePersons/GetFilmsByPersonDescription", ReplyAction = "http://tempuri.org/InterfacePersons/GetFilmsByPersonDescriptionResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmsByPersonDescriptionAsync(string personDescription);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePlaces/GetPhotosByCountry", ReplyAction = "http://tempuri.org/InterfacePlaces/GetPhotosByCountryResponse")]
    ModelMyPhotos.Photos[] GetPhotosByCountry(string country);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePlaces/GetPhotosByCountry", ReplyAction = "http://tempuri.org/InterfacePlaces/GetPhotosByCountryResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotosByCountryAsync(string country);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePlaces/GetPhotosByCity", ReplyAction = "http://tempuri.org/InterfacePlaces/GetPhotosByCityResponse")]
    ModelMyPhotos.Photos[] GetPhotosByCity(string city);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePlaces/GetPhotosByCity", ReplyAction = "http://tempuri.org/InterfacePlaces/GetPhotosByCityResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotosByCityAsync(string city);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePlaces/GetPhotosByRegion", ReplyAction = "http://tempuri.org/InterfacePlaces/GetPhotosByRegionResponse")]
    ModelMyPhotos.Photos[] GetPhotosByRegion(string region);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePlaces/GetPhotosByRegion", ReplyAction = "http://tempuri.org/InterfacePlaces/GetPhotosByRegionResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotosByRegionAsync(string region);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePlaces/GetFilmsByCountry", ReplyAction = "http://tempuri.org/InterfacePlaces/GetFilmsByCountryResponse")]
    ModelMyPhotos.Films[] GetFilmsByCountry(string country);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePlaces/GetFilmsByCountry", ReplyAction = "http://tempuri.org/InterfacePlaces/GetFilmsByCountryResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmsByCountryAsync(string country);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePlaces/GetFilmsByCity", ReplyAction = "http://tempuri.org/InterfacePlaces/GetFilmsByCityResponse")]
    ModelMyPhotos.Films[] GetFilmsByCity(string city);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePlaces/GetFilmsByCity", ReplyAction = "http://tempuri.org/InterfacePlaces/GetFilmsByCityResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmsByCityAsync(string city);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePlaces/GetFilmssByRegion", ReplyAction = "http://tempuri.org/InterfacePlaces/GetFilmssByRegionResponse")]
    ModelMyPhotos.Films[] GetFilmssByRegion(string region);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfacePlaces/GetFilmssByRegion", ReplyAction = "http://tempuri.org/InterfacePlaces/GetFilmssByRegionResponse")]
    System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmssByRegionAsync(string region);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IModelMyPhotosChannel : IModelMyPhotos, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ModelMyPhotosClient : System.ServiceModel.ClientBase<IModelMyPhotos>, IModelMyPhotos
{

    public ModelMyPhotosClient()
    {
    }

    public ModelMyPhotosClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public ModelMyPhotosClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public ModelMyPhotosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public ModelMyPhotosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public bool AddPhoto(ModelMyPhotos.Photos newPhoto)
    {
        return base.Channel.AddPhoto(newPhoto);
    }

    public System.Threading.Tasks.Task<bool> AddPhotoAsync(ModelMyPhotos.Photos newPhoto)
    {
        return base.Channel.AddPhotoAsync(newPhoto);
    }

    public ModelMyPhotos.Photos UpdatePhoto(ModelMyPhotos.Photos newPhoto)
    {
        return base.Channel.UpdatePhoto(newPhoto);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Photos> UpdatePhotoAsync(ModelMyPhotos.Photos newPhoto)
    {
        return base.Channel.UpdatePhotoAsync(newPhoto);
    }

    public int DeletePhoto(int id)
    {
        return base.Channel.DeletePhoto(id);
    }

    public System.Threading.Tasks.Task<int> DeletePhotoAsync(int id)
    {
        return base.Channel.DeletePhotoAsync(id);
    }

    public ModelMyPhotos.Photos[] GetPhotoByDate(System.DateTime date)
    {
        return base.Channel.GetPhotoByDate(date);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotoByDateAsync(System.DateTime date)
    {
        return base.Channel.GetPhotoByDateAsync(date);
    }

    public ModelMyPhotos.Photos[] GetPhotoByEvent(string eveniment)
    {
        return base.Channel.GetPhotoByEvent(eveniment);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotoByEventAsync(string eveniment)
    {
        return base.Channel.GetPhotoByEventAsync(eveniment);
    }

    public ModelMyPhotos.Photos[] GetPhotoByLandscape(string landscape)
    {
        return base.Channel.GetPhotoByLandscape(landscape);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotoByLandscapeAsync(string landscape)
    {
        return base.Channel.GetPhotoByLandscapeAsync(landscape);
    }

    public ModelMyPhotos.Photos GetPhotoByPath(string path)
    {
        return base.Channel.GetPhotoByPath(path);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Photos> GetPhotoByPathAsync(string path)
    {
        return base.Channel.GetPhotoByPathAsync(path);
    }

    public bool AddFilm(ModelMyPhotos.Films newFilm)
    {
        return base.Channel.AddFilm(newFilm);
    }

    public System.Threading.Tasks.Task<bool> AddFilmAsync(ModelMyPhotos.Films newFilm)
    {
        return base.Channel.AddFilmAsync(newFilm);
    }

    public ModelMyPhotos.Films UpdateFilm(ModelMyPhotos.Films newFilm)
    {
        return base.Channel.UpdateFilm(newFilm);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Films> UpdateFilmAsync(ModelMyPhotos.Films newFilm)
    {
        return base.Channel.UpdateFilmAsync(newFilm);
    }

    public int DeleteFilm(int id)
    {
        return base.Channel.DeleteFilm(id);
    }

    public System.Threading.Tasks.Task<int> DeleteFilmAsync(int id)
    {
        return base.Channel.DeleteFilmAsync(id);
    }

    public ModelMyPhotos.Films[] GetFilmByDate(System.DateTime date)
    {
        return base.Channel.GetFilmByDate(date);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmByDateAsync(System.DateTime date)
    {
        return base.Channel.GetFilmByDateAsync(date);
    }

    public ModelMyPhotos.Films[] GetFilmByEvent(string eveniment)
    {
        return base.Channel.GetFilmByEvent(eveniment);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmByEventAsync(string eveniment)
    {
        return base.Channel.GetFilmByEventAsync(eveniment);
    }

    public ModelMyPhotos.Films[] GetFilmByLandscape(string landscape)
    {
        return base.Channel.GetFilmByLandscape(landscape);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmByLandscapeAsync(string landscape)
    {
        return base.Channel.GetFilmByLandscapeAsync(landscape);
    }

    public ModelMyPhotos.Photos[] GetPhotosByPersonName(string personName)
    {
        return base.Channel.GetPhotosByPersonName(personName);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotosByPersonNameAsync(string personName)
    {
        return base.Channel.GetPhotosByPersonNameAsync(personName);
    }

    public ModelMyPhotos.Photos[] GetPhotosByPersonDescription(string personDescription)
    {
        return base.Channel.GetPhotosByPersonDescription(personDescription);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotosByPersonDescriptionAsync(string personDescription)
    {
        return base.Channel.GetPhotosByPersonDescriptionAsync(personDescription);
    }

    public ModelMyPhotos.Films[] GetFilmsByPersonName(string personName)
    {
        return base.Channel.GetFilmsByPersonName(personName);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmsByPersonNameAsync(string personName)
    {
        return base.Channel.GetFilmsByPersonNameAsync(personName);
    }

    public ModelMyPhotos.Films[] GetFilmsByPersonDescription(string personDescription)
    {
        return base.Channel.GetFilmsByPersonDescription(personDescription);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmsByPersonDescriptionAsync(string personDescription)
    {
        return base.Channel.GetFilmsByPersonDescriptionAsync(personDescription);
    }

    public ModelMyPhotos.Photos[] GetPhotosByCountry(string country)
    {
        return base.Channel.GetPhotosByCountry(country);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotosByCountryAsync(string country)
    {
        return base.Channel.GetPhotosByCountryAsync(country);
    }

    public ModelMyPhotos.Photos[] GetPhotosByCity(string city)
    {
        return base.Channel.GetPhotosByCity(city);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotosByCityAsync(string city)
    {
        return base.Channel.GetPhotosByCityAsync(city);
    }

    public ModelMyPhotos.Photos[] GetPhotosByRegion(string region)
    {
        return base.Channel.GetPhotosByRegion(region);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Photos[]> GetPhotosByRegionAsync(string region)
    {
        return base.Channel.GetPhotosByRegionAsync(region);
    }

    public ModelMyPhotos.Films[] GetFilmsByCountry(string country)
    {
        return base.Channel.GetFilmsByCountry(country);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmsByCountryAsync(string country)
    {
        return base.Channel.GetFilmsByCountryAsync(country);
    }

    public ModelMyPhotos.Films[] GetFilmsByCity(string city)
    {
        return base.Channel.GetFilmsByCity(city);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmsByCityAsync(string city)
    {
        return base.Channel.GetFilmsByCityAsync(city);
    }

    public ModelMyPhotos.Films[] GetFilmssByRegion(string region)
    {
        return base.Channel.GetFilmssByRegion(region);
    }

    public System.Threading.Tasks.Task<ModelMyPhotos.Films[]> GetFilmssByRegionAsync(string region)
    {
        return base.Channel.GetFilmssByRegionAsync(region);
    }
}
